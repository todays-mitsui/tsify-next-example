/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function from_ts_array_into_rust_vec(a: number, b: number): Array;
export function from_ts_uint8array_into_rust_vec(a: number, b: number): Array;
export function from_ts_int8array_into_rust_vec(a: number, b: number): Array;
export function from_ts_uint16array_into_rust_vec(a: number, b: number): Array;
export function from_ts_int16array_into_rust_vec(a: number, b: number): Array;
export function from_ts_uint32array_into_rust_vec(a: number, b: number): Array;
export function from_ts_int32array_into_rust_vec(a: number, b: number): Array;
export function from_ts_biguint64array_into_rust_vec(a: number, b: number): Array;
export function from_ts_bigint64array_into_rust_vec(a: number, b: number): Array;
export function from_ts_float32array_into_rust_vec(a: number, b: number): Array;
export function from_ts_float64array_into_rust_vec(a: number, b: number): Array;
export function from_ts_record_into_rust_hash_map(a: number): number;
export function from_ts_interface_into_rust_struct(a: number): number;
export function from_ts_tuple_into_rust_struct(a: number): number;
export function from_ts_nullable_string_into_rust_option_string(a: number, b: number, c: number, d: number): Array;
export function from_ts_optional_parameter_into_rust_option_string(a: number, b: number): Array;
export function from_object_has_optional_property_into_rust_struct(a: number): number;
export function from_ts_string_literal_type_union_into_rust_enum(a: number): number;
export function from_ts_object_union_into_rust_enum(a: number): number;
export function from_ts_closure_into_js_sys_function(a: number): number;
export function from_ts_number_into_rust_u32(a: number): number;
export function from_ts_number_into_rust_i32(a: number): number;
export function from_ts_bigint_into_rust_u64(a: number): number;
export function from_ts_bigint_into_rust_i64(a: number): number;
export function from_ts_number_into_rust_f32(a: number): number;
export function from_ts_string_into_rust_string(a: number, b: number): Array;
export function from_ts_string_into_rust_str(a: number, b: number): Array;
export function from_ts_boolean_into_rust_bool(a: number): number;
export function from_ts_null_into_rust_unit_struct(a: number): number;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function __externref_table_alloc(): number;
export function __externref_drop_slice(a: number, b: number): void;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function __wbindgen_start(): void;
